<?php
namespace DummyNamespace;

use Csgt\Crud\CrudController;
use Csgt\Cancerbero\Facades\Cancerbero;
use Illuminate\Http\Request;
//use App\Models\Model;

class DummyClass extends CrudController
{
    public function setup(Request $request)
    {
        // $this->setModel(new Model);
        // $this->setTitle('Title');
        // $this->setExtraAction(['url' => '/module/import', 'title' => 'Importar']);
        // $this->setBreadcrumb([
        //     ['url' => '', 'title' => 'Catálogos', 'icon' => 'fa fa-book'],
        //     ['url' => '', 'title' => 'Titulo', 'icon' => 'fa fa-university'],
        // ]);
        // $this->setField(['name' => 'Nombre', 'field' => 'name']);
        // $this->setField(['name' => 'Descripción', 'field' => 'descripcion']);

        // $this->setField([
        //     'name'       => 'Protocol',
        //     'field'      => 'protocol_id',
        //     'type'       => 'combobox',
        //     'collection' => Protocol::select('id', 'name')->get(),
        // ]);

 
        //Campo Multi:
        // $this->setField(['name' => 'Requirements', 'type' => 'multi', 'field' => 'relationName']);
        // requiere en el modelo, crear la relation belongsToMany relationName
        // requiere en el modelo, crear el método fetchRelationName
        // opcional, si la columna para mostrar en el show, no se llama 'name'
        // crear el método fetchRelationNameColumn y retorne el campo deseado.

        // $this->setHidden(['field' => 'client_id', 'value' => 1]);
        // $this->setExtraButton([
        //     'url'    => '/configuration/sensors?gateway_id={id}',
        //     'icon'   => 'fa fa-thermometer',
        //     'title'  => 'Sensors',
        //     'class'  => 'btn-warning',
        // ]);

        // $this->setPermissions(Cancerbero::crudPermissions('module'));
    }
}
