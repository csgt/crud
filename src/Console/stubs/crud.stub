<?php
namespace DummyNamespace;

use Csgt\Crud\CrudController;

//use App\Models\Model;

class DummyClass extends CrudController
{
    public function __construct()
    {
        // $this->setModel(new Model);
        // $this->setTitle('Title');
        // $this->setBreadcrumb([
        //     ['url' => '', 'title' => 'Catálogos', 'icon' => 'fa fa-book'],
        //     ['url' => '', 'title' => 'Titulo', 'icon' => 'fa fa-university'],
        // ]);
        // $this->setField(['name' => 'Nombre', 'field' => 'name']);
        // $this->setField(['name' => 'Descripción', 'field' => 'descripcion']);

        // $this->middleware(function ($request, $next) {
        //     $this->setField([
        //         'name'     => 'Protocolo',
        //         'field'      => 'protocoloid',
        //         'type'       => 'combobox',
        //         'collection' => Protocolo::select('protocoloid', 'name')->get(),
        //     ]);

        //     return $next($request);
        // });

        //Campo Multi:
        // $this->setField(['name' => 'Requisitos', 'type' => 'multi', 'field' => 'relationName']);
        // requiere en el modelo, crear la relation belongsToMany relationName
        // requiere en el modelo, crear el método fetchRelationName
        // opcional, si la columna para mostrar en el show, no se llama 'name'
            // crear el método fetchRelationNameColumn y retorne el campo deseado.

        // $this->setHidden(['field' => 'clienteid', 'value' => 1]);
        // $this->setExtraButton([
        //     'url'    => '/configuracion/sensores?gatewayid={id}',
        //     'icon'   => 'fa fa-thermometer',
        //     'title' => 'Sensores',
        //     'class'  => 'warning',
        // ]);

        // $this->setPermissions("\Cancerbero::crudPermissions", 'module');
    }
}
